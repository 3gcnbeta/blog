---
layout: post
status: publish
published: true
title: Sqlite下得到列名的方法
author:
  display_name: 北漂IT民工
  login: admin
  email: calidion@gmail.com
  url: ''
author_login: admin
author_email: calidion@gmail.com
wordpress_id: 18
wordpress_url: http://www.3gcnbeta.com/wordpress/?p=18
categories:
- 数据库技术
tags:
- sqlite
comments: []
---
1.通过下面的语句得到表的创建语句

```sql
select sql from sqlite_master where type = 'table' and tbl_name = 'table_name';
```

其中table_name是你要替换掉的表名

2.通过分析sql语句得到各列的名称.

下面是python下的一段分析代码:</p>

```

  def isTableExist(self, table_name):

    sql = """select name from sqlite_master where type = 'table' and

      name = '%s'""" % (table_name)

    h = self._cursor.execute(sql)

    ret = h.fetchall()

    return len(ret) == 1</p>

  def isFieldsExist(self, table_name, fields):

    sql = """select sql from sqlite_master where type =

      'table' and tbl_name = '%s'""" % (table_name)

    h = self._cursor.execute(sql)

    row = h.fetchone()

    old_fields = re.findall("((.*))", row[0])[0].split(",")

    tmp_fields = []

    for row in old_fields:

      tmp_fields.append(row.strip().replace("`", "").split(" ")[0])

    for field in fields:

      if field not in tmp_fields:

        return False

    return True

  def isFieldsTypesMatch(self, table_name, fields, types):

    sql = """select sql from sqlite_master where type =

      'table' and tbl_name = '%s'""" % (table_name)

    h = self._cursor.execute(sql)

    row = h.fetchone()

    old_fields = re.findall("((.*))", row[0])[0].split(",")

    tmp_fields = {}

    for row in old_fields:

      tmp = row.strip().replace("`", "").split(" ")

      tmp_fields[tmp[0].upper()] = tmp[1].upper()

    i = 0

    for field in fields:

      if tmp_fields[field.upper()] != types[i].upper():

        return False

      i += 1

    return True
```
